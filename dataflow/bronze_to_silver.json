{
	"name": "bronze_to_silver",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_movie_bronze_parquet",
						"type": "DatasetReference"
					},
					"name": "bronzeInput"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "parse1"
				},
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          datasource as string,",
				"          ingesttime as timestamp,",
				"          movie as string,",
				"          status as string,",
				"          p_ingestdate as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> bronzeInput",
				"bronzeInput filter(status == 'new') ~> filter1",
				"derivedColumn1 parse(movie_value = movie_value ? (Id as integer,",
				"          Title as string,",
				"          Overview as string,",
				"          Tagline as string,",
				"          Budget as float,",
				"          Revenue as float,",
				"          ImdbUrl as string,",
				"          TmdbUrl as string,",
				"          PosterUrl as string,",
				"          BackdropUrl as string,",
				"          OriginalLanguage as string,",
				"          ReleaseDate as date,",
				"          RunTime as integer,",
				"          Price as float,",
				"          CreatedDate as date,",
				"          genres as (id as integer,",
				"     name as string)[]),",
				"     format: 'json',",
				"     documentForm: 'singleDocument') ~> parse1",
				"parse1 select(mapColumn(",
				"          datasource = movie,",
				"          ingesttime,",
				"          movie,",
				"          status,",
				"          p_ingestdate,",
				"          movie_value",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"filter1 derive(movie_value = movie) ~> derivedColumn1"
			]
		}
	}
}